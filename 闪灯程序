#include <math.h>

void main(void)
{
    unsigned const PWMPeriod = 1500; // 设置PWMPeriod参数
    volatile unsigned int i;        // 变量
    WDTCTL = WDTPW + WDTHOLD;   // 关闭看门狗
    BCSCTL1 = CALBC1_1MHZ;      // 1M内部时钟，其他也可以
    DCOCTL = CALDCO_1MHZ;
    P1DIR |= BIT6;              // 设置 P1.6为输出
    P1SEL |= BIT6;              // 设置 P1.6为TA0.1输出
    TACCR0 = PWMPeriod;         // 设置PWM 周期
    TACCTL1 = OUTMOD_7;         // 设置PWM 输出模式为：7 - PWM复位/置位模式
    TACTL = TASSEL_2 + MC_1;    // 设置TIMERA的时钟源为SMCLK, 计数模式为up,到CCR0再自动从0开始计数

    while (1)
    {
        CCR1 = 0; // 确保开始是暗的

        // 渐亮过程：使用指数函数调整CCR1的值
        for (i = 0; i < PWMPeriod; i++)
        {
            CCR1 = PWMPeriod * (1 - exp(-i / (PWMPeriod / 5.0)));
            delay_nms(1); // 固定延迟时间
        }

        // 渐暗过程：使用指数函数调整CCR1的值
        for (i = PWMPeriod; i > 0; i--)
        {
            CCR1 = PWMPeriod * exp(-i / (PWMPeriod / 5.0));
            delay_nms(1); // 固定延迟时间
        }

        CCR1 = 0; // 确保灯暗
    }
}